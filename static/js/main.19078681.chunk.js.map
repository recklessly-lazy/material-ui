{"version":3,"sources":["Calculator.jsx","Table.jsx","Demo.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","gridContainer","width","margin","display","backgroundColor","border","height","textAlign","flexDirection","alignItems","color","padding","fontSize","fontFamily","fontWeight","boxShadow","marginBottom","paper","position","palette","primary","dark","maxWidth","minWidth","borderRadius","gridItem","button","background","warning","light","main","transform","functionButtons","secondary","spanButtons","menuButton","marginRight","spacing","appBar","useToolTipStyles","arrow","common","black","tooltip","Calculator","useState","result","setResult","disabled","setDisabled","operators","valueChangedHandler","oldValue","input","newValue","previousInput","charAt","length","inputBeforePreviousInput","slice","operationsHandler","operation","newResult","lastInput","evaluate","output","eval","toString","console","log","classes","tooltipClasses","buttons","split","map","key","className","item","xs","onClick","operatorsAndFunctions","title","placement","edge","aria-label","alert","titleAccess","variant","container","table","grid","root","flexGrow","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.19078681.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Card,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridContainer: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  display: {\r\n    backgroundColor: \"black\",\r\n    border: \"2px solid grey\",\r\n    height: \"50px\",\r\n    textAlign: \"right\",\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n    padding: \"12px 15px 3px 0px\",\r\n    fontSize: \"20px\",\r\n    fontFamily: \"verdana\",\r\n    fontWeight: \"300\",\r\n    boxShadow: \"1px 3px 4px black\",\r\n    marginBottom: \"40px\",\r\n  },\r\n  paper: {\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.primary.dark,\r\n    // top: \"50%\",\r\n    // left: \"50%\",\r\n    // transform: \"translate(-50%, -50%)\",\r\n    margin: \"50px auto\",\r\n    width: \"80%\",\r\n    maxWidth: \"329px\",\r\n    \"@media(min-width:600px)\": {\r\n      minWidth: \"330px\",\r\n      maxWidth: \"450px\",\r\n      width: \"50%\",\r\n    },\r\n    padding: \"20px 10px 30px \",\r\n    boxShadow: \"2px 5px 15px 3px rgb(120,120,120,1)\",\r\n    borderRadius: \"10px 10px 50% 50% / 2%\",\r\n  },\r\n  gridItem: {\r\n    // margin: \"auto\",\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    padding: \"5px\",\r\n    fontWeight: \"bolder\",\r\n    fontFamily: \"cursive\",\r\n    width: \"70%\",\r\n    textAlign: \"center\",\r\n    background: theme.palette.warning.light,\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0px 5px 2px rgb(60,60,60)\",\r\n    border: \"2px solid white\",\r\n    \"&:hover\": {\r\n      background: theme.palette.warning.main,\r\n      boxShadow: `0px 0px 18px 6px ${theme.palette.warning.dark}`,\r\n    },\r\n    \"&:active\": {\r\n      background: theme.palette.warning.dark,\r\n      transform: \"translate(0px, 2px)\",\r\n      boxShadow: \"0px 1px 2px 1px rgb(40,40,40)\",\r\n    },\r\n  },\r\n  functionButtons: {\r\n    padding: \"5px\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"roboto\",\r\n    width: \"70%\",\r\n    textAlign: \"center\",\r\n    background: theme.palette.secondary.light,\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0px 5px 2px rgb(60,60,60)\",\r\n    border: \"2px solid white\",\r\n    \"&:hover\": {\r\n      background: theme.palette.secondary.main,\r\n      boxShadow: `0px 0px 20px 5px red`,\r\n    },\r\n    \"&:active\": {\r\n      background: theme.palette.secondary.dark,\r\n      transform: \"translate(0px, 2px)\",\r\n      boxShadow: \"0px 1px 2px 1px rgb(40,40,40)\",\r\n    },\r\n  },\r\n  spanButtons: {\r\n    padding: \"10px\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    borderRadius: \"5px\",\r\n    // boxShadow: '1px 8px 10px 3px rgb(40,40,40,0.7)'\r\n  },\r\n}));\r\n\r\nconst useToolTipStyles = makeStyles((theme) => ({\r\n  arrow: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n}));\r\n\r\nconst Calculator = () => {\r\n  const [result, setResult] = useState('0');\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const operators = { \"+\": \"\", \"-\": \"\", \"*\": \"\", \"/\": \"\" };\r\n  \r\n  const valueChangedHandler = (oldValue, input) => {\r\n    let newValue = oldValue;\r\n    const previousInput = oldValue.charAt( oldValue.length - 1 )\r\n    const inputBeforePreviousInput = oldValue.charAt( oldValue.length - 2)\r\n    if( newValue === 'Infinity' || newValue === 'NaN'){\r\n      newValue = input\r\n      setDisabled(false)\r\n    }else if (input === \"0\" && oldValue === \"0\") {\r\n      newValue = \"0\";\r\n    } else if (oldValue === \"0\") {\r\n      newValue = input;\r\n    } else if( previousInput === '0' && inputBeforePreviousInput in operators) {\r\n      newValue = newValue.slice(0, -1) + input\r\n    } else {\r\n      newValue += input;\r\n    }\r\n    setResult(newValue);\r\n  };\r\n\r\n  const operationsHandler = (result, operation) => {\r\n    let newResult = result;\r\n    const lastInput = result.charAt(result.length - 1);\r\n    if (lastInput === operation) {\r\n    } else if (lastInput !== operation && lastInput in operators) {\r\n      newResult = result.slice(0, -1) + operation;\r\n    } else {\r\n      newResult += operation;\r\n    }\r\n    setResult(newResult);\r\n  };\r\n\r\n  const evaluate = (result) => {\r\n\r\n    let lastInput = ( result.length > 1 ) ? result.charAt( result.length - 1 ) : null\r\n    if( lastInput in operators){\r\n      result = result.slice(0, -1)\r\n    }\r\n    let output = eval(result).toString();\r\n    if( output === 'Infinity' || output === 'NaN') {\r\n      console.log('setting disabled to true')\r\n      setDisabled(true)\r\n    }\r\n    setResult(output);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const tooltipClasses = useToolTipStyles()\r\n\r\n  const buttons = '789456123'.split('').map((button) => (\r\n    <Grid key={button} className={classes.gridItem} item xs={4}>\r\n      <Button\r\n        className={classes.button}\r\n        onClick={() =>\r\n          valueChangedHandler(result.toString(), button.toString())\r\n        }\r\n      >\r\n        {button}\r\n      </Button>\r\n    </Grid>\r\n  ));\r\n\r\n  const operatorsAndFunctions = \"+-*/=\".split(\"\").map((button) =>\r\n    button === \"=\" ? (\r\n      <Grid key={button} className={classes.gridItem} item xs={4}>\r\n        <Tooltip\r\n          title={disabled ? \"Press AC or a number\" : \"Evaluate\"}\r\n          classes={tooltipClasses}\r\n          arrow\r\n        >\r\n          <span className={classes.spanButtons}>\r\n            <Button\r\n              disabled={disabled}\r\n              className={classes.functionButtons}\r\n              onClick={() => evaluate(result)}\r\n            >\r\n              {button}\r\n            </Button>\r\n          </span>\r\n        </Tooltip>\r\n      </Grid>\r\n    ) : (\r\n      <Grid key={button} className={classes.gridItem} item xs={4}>\r\n        <Tooltip\r\n          title={\r\n            disabled\r\n              ? \"Press AC or a number\"\r\n              : `${\r\n                  button === \"+\"\r\n                    ? \"Add\"\r\n                    : button === \"-\"\r\n                    ? \"Subtract\"\r\n                    : button === \"*\"\r\n                    ? \"Multiply\"\r\n                    : \"Divide\"\r\n                }`\r\n          }\r\n          arrow\r\n          placement=\"right-start\"\r\n          classes={tooltipClasses}\r\n        >\r\n          <span>\r\n            <Button\r\n              className={classes.functionButtons}\r\n              disabled={disabled}\r\n              // disabled={result === \"Infinity\" || result === \"NaN\" ? true : false}\r\n              onClick={() =>\r\n                operationsHandler(result.toString(), button.toString())\r\n              }\r\n            >\r\n              {button}\r\n            </Button>\r\n          </span>\r\n        </Tooltip>\r\n      </Grid>\r\n    )\r\n  );\r\n  return (\r\n    <Fragment>\r\n      <AppBar className={classes.appBar} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => alert(\"Nothing\")}\r\n          >\r\n            <MenuIcon titleAccess={\"Menu\"} />\r\n          </IconButton>\r\n          <Typography variant={\"h6\"}>Calculator</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Paper className={classes.paper}>\r\n        <Grid className={classes.gridContainer} container spacing={2}>\r\n          <Grid className={classes.gridItem} item xs={12}>\r\n            <Card className={classes.display}>\r\n              <p>{result}</p>\r\n            </Card>\r\n          </Grid>\r\n          {buttons}\r\n          <Grid className={classes.gridItem} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              onClick={() => valueChangedHandler(result.toString(), \"0\")}\r\n            >\r\n              {0}\r\n            </Button>\r\n          </Grid>\r\n          {operatorsAndFunctions}\r\n          <Grid className={classes.gridItem} item xs={4}>\r\n            <Tooltip classes={tooltipClasses} title=\"Clear All\" arrow>\r\n              <span className = { classes.spanButtons }>\r\n                <Button\r\n                  className={classes.functionButtons}\r\n                  onClick={() => {\r\n                    setResult(\"0\");\r\n                    setDisabled(false);\r\n                  }}\r\n                >\r\n                  {\"AC\"}\r\n                </Button>\r\n              </span>\r\n            </Tooltip>\r\n          </Grid>\r\n          <Grid className={classes.gridItem} item xs={4}>\r\n            <Tooltip\r\n              classes={tooltipClasses}\r\n              title={disabled ? \"Press AC or a number\" : \"Clear last entry\"}\r\n              arrow\r\n            >\r\n              <span className = { classes.spanButtons }  >\r\n                <Button\r\n                  disabled={disabled}\r\n                  className={classes.functionButtons}\r\n                  onClick={() => {\r\n                    setResult(result.length === 1 ? \"0\" : result.slice(0, -1));\r\n                  }}\r\n                >\r\n                  <ArrowBackIcon></ArrowBackIcon>\r\n                </Button>\r\n              </span>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Calculator;\r\n//trying again","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: \"600px\",\r\n  },\r\n}));\r\n\r\nconst createRow = (savory, calorie, fat, carbohydrates, protein) => {\r\n  calorie += \" kcal\";\r\n  return { savory, calorie, fat, carbohydrates, protein };\r\n};\r\nconst CustomTable = () => {\r\n  const classes = useStyles();\r\n  const tableData = [createRow(\"Cookies\", 450, 2, 18, 10)];\r\n  return (\r\n    <TableContainer component={Card}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Savouries (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat (g)</TableCell>\r\n            <TableCell align=\"right\">Carbohydrates (g)</TableCell>\r\n            <TableCell align=\"right\">Protein (g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {tableData.map((row) => (\r\n            <TableRow>\r\n              <TableCell>{row.savory}</TableCell>\r\n              <TableCell align=\"right\">{row.calorie}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbohydrates}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","import React from \"react\";\r\nimport Table from \"./Table\";\r\nimport { Grid, Paper, makeStyles, Box } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    width: \"100%\",\r\n    margin: \"0px\",\r\n  },\r\n  paper: {\r\n    padding: \"10px\",\r\n    textAlign: \"center\",\r\n    color: \"#000\",\r\n    background: theme.palette.secondary.light,\r\n  },\r\n  table: {\r\n    minWidth: \"600px\",\r\n  },\r\n}));\r\n\r\nfunction Demo() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2} className={classes.grid}>\r\n        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n          <Paper title=\"some item\" className={classes.paper}>\r\n            item 1\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n          <Paper className={classes.paper}>item 2</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n          <Paper className={classes.paper}>item 3</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n          <Paper className={classes.paper}>item 4</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n          <Paper className={classes.paper}>item 5</Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4} lg={2}>\r\n          <Paper className={classes.paper}>item 6</Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Box mt={3} marginLeft={1}>\r\n        <Table />\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Demo;\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            News\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Demo from \"./Demo\";\nimport App from './App'\nimport Calculator from './Calculator'\n\nReactDOM.render(<Calculator />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}